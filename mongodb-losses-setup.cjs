// MongoDB Losses Setup Script
// Este script cria as cole√ß√µes e dados iniciais para o sistema de perdas no MongoDB

const { MongoClient } = require('mongodb');
const dotenv = require('dotenv');

dotenv.config();

const MONGODB_URI = process.env.VITE_MONGODB_URI;
const MONGODB_DATABASE = process.env.VITE_MONGODB_DATABASE;

async function setupLossesCollections() {
  const client = new MongoClient(MONGODB_URI);
  
  try {
    await client.connect();
    console.log('üîó Conectado ao MongoDB Atlas');
    
    const db = client.db(MONGODB_DATABASE);
    
    // Criar cole√ß√£o loss_types se n√£o existir
    const lossTypesCollection = db.collection('loss_types');
    
    // Verificar se j√° existem tipos de perdas
    const existingTypes = await lossTypesCollection.countDocuments();
    
    if (existingTypes === 0) {
      console.log('üìù Criando tipos de perdas padr√£o...');
      
      const defaultLossTypes = [
        {
          name: 'Embalagem (Filme)',
          unit: 'und',
          color: 'bg-red-500',
          icon: 'üéûÔ∏è',
          description: 'Perdas de filme de embalagem',
          created_at: new Date(),
          updated_at: new Date()
        },
        {
          name: 'Org√¢nico',
          unit: 'kg',
          color: 'bg-orange-500',
          icon: 'üåø',
          description: 'Perdas de material org√¢nico',
          created_at: new Date(),
          updated_at: new Date()
        },
        {
          name: 'Setup/Troca',
          unit: 'kg',
          color: 'bg-yellow-500',
          icon: 'üîß',
          description: 'Perdas durante setup ou troca de produto',
          created_at: new Date(),
          updated_at: new Date()
        },
        {
          name: 'Qualidade',
          unit: 'kg',
          color: 'bg-purple-500',
          icon: '‚ùå',
          description: 'Perdas por problemas de qualidade',
          created_at: new Date(),
          updated_at: new Date()
        },
        {
          name: 'Manuten√ß√£o',
          unit: 'kg',
          color: 'bg-blue-500',
          icon: '‚öôÔ∏è',
          description: 'Perdas durante manuten√ß√£o',
          created_at: new Date(),
          updated_at: new Date()
        },
        {
          name: 'Outro',
          unit: 'kg',
          color: 'bg-gray-500',
          icon: '‚ùì',
          description: 'Outras perdas',
          created_at: new Date(),
          updated_at: new Date()
        }
      ];
      
      const result = await lossTypesCollection.insertMany(defaultLossTypes);
      console.log(`‚úÖ ${result.insertedCount} tipos de perdas criados`);
    } else {
      console.log(`‚ÑπÔ∏è ${existingTypes} tipos de perdas j√° existem`);
    }
    
    // Criar cole√ß√£o material_losses se n√£o existir
    const materialLossesCollection = db.collection('material_losses');
    
    // Criar √≠ndices para melhor performance
    console.log('üìä Criando √≠ndices...');
    
    await lossTypesCollection.createIndex({ name: 1 }, { unique: true });
    await materialLossesCollection.createIndex({ recorded_at: -1 });
    await materialLossesCollection.createIndex({ machine_id: 1 });
    await materialLossesCollection.createIndex({ loss_type_id: 1 });
    await materialLossesCollection.createIndex({ order_id: 1 });
    
    console.log('‚úÖ √çndices criados com sucesso');
    
    // Verificar estrutura das cole√ß√µes
    const lossTypesCount = await lossTypesCollection.countDocuments();
    const materialLossesCount = await materialLossesCollection.countDocuments();
    
    console.log('\nüìà Resumo das cole√ß√µes:');
    console.log(`- loss_types: ${lossTypesCount} documentos`);
    console.log(`- material_losses: ${materialLossesCount} documentos`);
    
    console.log('\nüéâ Setup das cole√ß√µes de perdas conclu√≠do com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro durante o setup:', error);
    throw error;
  } finally {
    await client.close();
    console.log('üîå Conex√£o com MongoDB fechada');
  }
}

// Executar o setup
if (require.main === module) {
  setupLossesCollections()
    .then(() => {
      console.log('‚úÖ Setup conclu√≠do');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Falha no setup:', error);
      process.exit(1);
    });
}

module.exports = { setupLossesCollections };