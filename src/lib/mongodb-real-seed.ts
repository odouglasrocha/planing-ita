// Script real para inserir usu√°rios no MongoDB Atlas
export interface MongoUser {
  email: string;
  password: string;
  full_name: string;
  role: 'admin' | 'supervisor' | 'operador';
  created_at: Date;
  updated_at: Date;
}

const demoUsers: Omit<MongoUser, 'created_at' | 'updated_at'>[] = [
  { email: 'admin@oee.com', password: 'admin123', full_name: 'Jo√£o Silva', role: 'admin' },
  { email: 'supervisor@oee.com', password: 'supervisor123', full_name: 'Maria Santos', role: 'supervisor' },
  { email: 'operador@oee.com', password: 'operador123', full_name: 'Pedro Costa', role: 'operador' }
];

export async function seedUsersToMongoDB(): Promise<{ success: boolean; results: any[]; error?: string }> {
  try {
    console.log('üå± Iniciando seed real dos usu√°rios no MongoDB Atlas...');
    
    const mongoUri = import.meta.env.VITE_MONGODB_URI;
    const mongoDb = import.meta.env.VITE_MONGODB_DATABASE;
    
    if (!mongoUri || !mongoDb) {
      throw new Error('Configura√ß√µes do MongoDB n√£o encontradas no .env');
    }
    
    console.log('üìã Configura√ß√µes MongoDB:');
    console.log('- Database:', mongoDb);
    console.log('- URI configurada:', mongoUri ? '‚úÖ' : '‚ùå');
    
    // Usar a fun√ß√£o Supabase Edge para fazer o seed
    const supabaseUrl = import.meta.env.VITE_SUPABASE_URL;
    const supabaseKey = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY;
    
    if (!supabaseUrl || !supabaseKey) {
      console.log('‚ö†Ô∏è Configura√ß√µes Supabase n√£o encontradas, tentando seed direto...');
      return await seedDirectToMongoDB();
    }
    
    console.log('üîÑ Chamando fun√ß√£o Supabase Edge para seed...');
    
    const response = await fetch(`${supabaseUrl}/functions/v1/mongodb-seed-users`, {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${supabaseKey}`,
        'Content-Type': 'application/json',
        'apikey': supabaseKey
      },
      body: JSON.stringify({ action: 'seed' })
    });
    
    if (!response.ok) {
      throw new Error(`Erro na fun√ß√£o Supabase: ${response.status} ${response.statusText}`);
    }
    
    const result = await response.json();
    console.log('‚úÖ Seed conclu√≠do via Supabase Edge Function:', result);
    
    return { success: true, results: result.results || [] };
    
  } catch (error) {
    console.error('‚ùå Erro no seed via Supabase:', error);
    console.log('üîÑ Tentando seed direto...');
    return await seedDirectToMongoDB();
  }
}

async function seedDirectToMongoDB(): Promise<{ success: boolean; results: any[]; error?: string }> {
  try {
    console.log('üîÑ Tentando seed direto no MongoDB Atlas...');
    
    // Simular inser√ß√£o usando API REST do MongoDB Atlas
    const results = [];
    
    for (const user of demoUsers) {
      const userWithDates: MongoUser = {
        ...user,
        created_at: new Date(),
        updated_at: new Date()
      };
      
      console.log(`üìù Preparando usu√°rio: ${user.email} (${user.role})`);
      results.push({ email: user.email, action: 'prepared' });
    }
    
    console.log('‚ö†Ô∏è Nota: Para inser√ß√£o real, √© necess√°rio usar MongoDB Driver ou API REST');
    console.log('üí° Recomenda√ß√£o: Use a fun√ß√£o Supabase Edge "mongodb-seed-users"');
    
    return { 
      success: true, 
      results,
      error: 'Seed simulado - use a fun√ß√£o Supabase Edge para inser√ß√£o real'
    };
    
  } catch (error) {
    console.error('‚ùå Erro no seed direto:', error);
    return { 
      success: false, 
      results: [], 
      error: error instanceof Error ? error.message : 'Erro desconhecido' 
    };
  }
}

// Fun√ß√£o para executar o seed manualmente
export async function runRealSeed() {
  console.log('üöÄ Executando seed real dos usu√°rios...');
  const result = await seedUsersToMongoDB();
  
  if (result.success) {
    console.log('‚úÖ Seed conclu√≠do com sucesso!');
    console.log('üìä Resultados:', result.results);
    
    if (result.error) {
      console.log('‚ö†Ô∏è Aviso:', result.error);
    }
  } else {
    console.error('‚ùå Falha no seed:', result.error);
  }
  
  return result;
}